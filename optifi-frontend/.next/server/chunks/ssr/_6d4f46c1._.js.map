{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,qMAAA,CAAA,aAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,qMAAA,CAAA,aAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,qMAAA,CAAA,aAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/components/ui/dialog.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,qMAAA,CAAA,aAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,qMAAA,CAAA,aAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,qMAAA,CAAA,aAAgB,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = 'Input';\n\nexport { Input };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,qMAAA,CAAA,aAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/components/ui/label.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,qMAAA,CAAA,aAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/components/ui/select.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react';\n\nimport { cn } from '@/lib/utils';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]'\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport { Textarea };\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,yBAAW,qMAAA,CAAA,aAAgB,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 487, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gab/OPTIFI/next%20proj/optifi-frontend/app/calendar/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useCallback, useMemo } from \"react\";\r\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\r\nimport { format, parse, startOfWeek, getDay } from \"date-fns\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"./calendar.css\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Calendar as CalendarIcon, Plus, Edit, Trash2 } from \"lucide-react\";\r\n\r\n// Custom calendar components to improve interaction\r\nconst CustomCalendar = ({ events, ...props }: any) => {\r\n  console.log(\"CustomCalendar received events:\", events);\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <Calendar events={events} {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst locales = {\r\n  \"en-US\": require(\"date-fns/locale/en-US\"),\r\n};\r\n\r\nconst localizer = dateFnsLocalizer({\r\n  format,\r\n  parse,\r\n  startOfWeek,\r\n  getDay,\r\n  locales,\r\n});\r\n\r\ninterface Event {\r\n  id: string;\r\n  title: string;\r\n  start: Date;\r\n  end: Date;\r\n  description?: string;\r\n  category: string;\r\n  color: string;\r\n  allDay?: boolean;\r\n}\r\n\r\nconst categoryColors = {\r\n  work: \"#3b82f6\",\r\n  personal: \"#10b981\",\r\n  meeting: \"#f59e0b\",\r\n  reminder: \"#ef4444\",\r\n  travel: \"#8b5cf6\",\r\n  health: \"#06b6d4\",\r\n};\r\n\r\nconst categories = [\r\n  { value: \"work\", label: \"Work\", color: categoryColors.work },\r\n  { value: \"personal\", label: \"Personal\", color: categoryColors.personal },\r\n  { value: \"meeting\", label: \"Meeting\", color: categoryColors.meeting },\r\n  { value: \"reminder\", label: \"Reminder\", color: categoryColors.reminder },\r\n  { value: \"travel\", label: \"Travel\", color: categoryColors.travel },\r\n  { value: \"health\", label: \"Health\", color: categoryColors.health },\r\n];\r\n\r\nexport default function CalendarPage() {\r\n  const [events, setEvents] = useState<Event[]>([\r\n    {\r\n      id: \"1\",\r\n      title: \"Team Meeting\",\r\n      start: new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth(),\r\n        15,\r\n        10,\r\n        0\r\n      ),\r\n      end: new Date(new Date().getFullYear(), new Date().getMonth(), 15, 11, 0),\r\n      description: \"Weekly team sync\",\r\n      category: \"meeting\",\r\n      color: categoryColors.meeting,\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Doctor Appointment\",\r\n      start: new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth(),\r\n        16,\r\n        14,\r\n        0\r\n      ),\r\n      end: new Date(new Date().getFullYear(), new Date().getMonth(), 16, 15, 0),\r\n      description: \"Annual checkup\",\r\n      category: \"health\",\r\n      color: categoryColors.health,\r\n    },\r\n  ]);\r\n\r\n  const [selectedEvent, setSelectedEvent] = useState<Event | null>(null);\r\n  const [isEventDialogOpen, setIsEventDialogOpen] = useState(false);\r\n  const [view, setView] = useState(\"month\");\r\n\r\n  const eventStyleGetter = useCallback((event: Event) => {\r\n    return {\r\n      style: {\r\n        backgroundColor: event.color,\r\n        borderRadius: \"4px\",\r\n        opacity: 0.8,\r\n        color: \"white\",\r\n        border: \"0px\",\r\n        display: \"block\",\r\n      },\r\n    };\r\n  }, []);\r\n\r\n  const handleSelect = useCallback(\r\n    ({ start, end, action }: { start: Date; end: Date; action?: string }) => {\r\n      // Create events on click, select, or touch actions\r\n      if (action === \"click\" || action === \"select\" || action === \"touch\") {\r\n        setSelectedEvent({\r\n          id: \"\",\r\n          title: \"\",\r\n          start,\r\n          end,\r\n          description: \"\",\r\n          category: \"work\",\r\n          color: categoryColors.work,\r\n        });\r\n        setIsEventDialogOpen(true);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleEventSelect = useCallback((event: Event) => {\r\n    setSelectedEvent(event);\r\n    setIsEventDialogOpen(true);\r\n  }, []);\r\n\r\n  const handleEventDrop = useCallback(\r\n    ({ event, start, end }: { event: Event; start: Date; end: Date }) => {\r\n      setEvents((prev) =>\r\n        prev.map((e) => (e.id === event.id ? { ...e, start, end } : e))\r\n      );\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleEventResize = useCallback(\r\n    ({ event, start, end }: { event: Event; start: Date; end: Date }) => {\r\n      setEvents((prev) =>\r\n        prev.map((e) => (e.id === event.id ? { ...e, start, end } : e))\r\n      );\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleSaveEvent = useCallback(\r\n    (eventData: Partial<Event>) => {\r\n      if (selectedEvent?.id) {\r\n        // Update existing event\r\n        setEvents((prev) =>\r\n          prev.map((e) =>\r\n            e.id === selectedEvent.id ? { ...e, ...eventData } : e\r\n          )\r\n        );\r\n      } else {\r\n        // Create new event\r\n        const newEvent: Event = {\r\n          id: Date.now().toString(),\r\n          title: eventData.title || \"\",\r\n          start: eventData.start || new Date(),\r\n          end: eventData.end || new Date(),\r\n          description: eventData.description || \"\",\r\n          category: eventData.category || \"work\",\r\n          color:\r\n            categoryColors[eventData.category as keyof typeof categoryColors] ||\r\n            categoryColors.work,\r\n        };\r\n        console.log(\"Creating new event:\", newEvent);\r\n        setEvents((prev) => {\r\n          const updatedEvents = [...prev, newEvent];\r\n          console.log(\"Updated events array:\", updatedEvents);\r\n          return updatedEvents;\r\n        });\r\n      }\r\n      setIsEventDialogOpen(false);\r\n      setSelectedEvent(null);\r\n    },\r\n    [selectedEvent]\r\n  );\r\n\r\n  const handleDeleteEvent = useCallback((eventId: string) => {\r\n    setEvents((prev) => prev.filter((e) => e.id !== eventId));\r\n    setIsEventDialogOpen(false);\r\n    setSelectedEvent(null);\r\n  }, []);\r\n\r\n  const messages = {\r\n    allDay: \"All Day\",\r\n    previous: \"<\",\r\n    next: \">\",\r\n    today: \"Today\",\r\n    month: \"Month\",\r\n    week: \"Week\",\r\n    day: \"Day\",\r\n    agenda: \"Agenda\",\r\n    date: \"Date\",\r\n    time: \"Time\",\r\n    event: \"Event\",\r\n    noEventsInRange: \"There are no events in this range.\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50\">\r\n      <div className=\"max-w-7xl mx-auto px-2 sm:px-4 lg:px-8 py-4 sm:py-8\">\r\n        <div className=\"mb-4 sm:mb-8\">\r\n          <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-900 mb-2\">\r\n            Calendar Event Scheduler\r\n          </h1>\r\n          <p className=\"text-sm sm:text-base text-gray-600\">\r\n            Manage your events with day, week, and month views\r\n          </p>\r\n        </div>\r\n\r\n        <Card className=\"mb-4 sm:mb-6\">\r\n          <CardHeader className=\"p-3 sm:p-6\">\r\n            <div className=\"flex flex-col space-y-4 sm:flex-row sm:items-center sm:justify-between sm:space-y-0\">\r\n              <CardTitle className=\"flex items-center gap-2 text-lg sm:text-xl\">\r\n                <CalendarIcon className=\"h-5 w-5 sm:h-6 sm:w-6\" />\r\n                Event Calendar\r\n              </CardTitle>\r\n\r\n              <div className=\"flex flex-col space-y-3 sm:flex-row sm:items-center sm:space-y-0 sm:space-x-4\">\r\n                {/* Category badges - scrollable on mobile */}\r\n                <div className=\"flex items-center gap-1 sm:gap-2 overflow-x-auto pb-2 sm:pb-0\">\r\n                  {categories.map((category) => (\r\n                    <Badge\r\n                      key={category.value}\r\n                      style={{ backgroundColor: category.color }}\r\n                      className=\"text-white text-xs sm:text-sm whitespace-nowrap flex-shrink-0\"\r\n                    >\r\n                      {category.label}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Debug info - remove in production */}\r\n                <div className=\"text-xs text-gray-500\">\r\n                  Events: {events.length}\r\n                </div>\r\n\r\n                {/* View buttons */}\r\n                <div className=\"flex items-center gap-1 sm:gap-2\">\r\n                  <Button\r\n                    variant={view === \"day\" ? \"default\" : \"outline\"}\r\n                    size=\"sm\"\r\n                    className=\"text-xs sm:text-sm px-2 sm:px-3\"\r\n                    onClick={() => setView(\"day\")}\r\n                  >\r\n                    Day\r\n                  </Button>\r\n                  <Button\r\n                    variant={view === \"week\" ? \"default\" : \"outline\"}\r\n                    size=\"sm\"\r\n                    className=\"text-xs sm:text-sm px-2 sm:px-3\"\r\n                    onClick={() => setView(\"week\")}\r\n                  >\r\n                    Week\r\n                  </Button>\r\n                  <Button\r\n                    variant={view === \"month\" ? \"default\" : \"outline\"}\r\n                    size=\"sm\"\r\n                    className=\"text-xs sm:text-sm px-2 sm:px-3\"\r\n                    onClick={() => setView(\"month\")}\r\n                  >\r\n                    Month\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent className=\"p-2 sm:p-6\">\r\n            <div className=\"h-[500px] sm:h-[500px] lg:h-[600px]\">\r\n              <CustomCalendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: \"100%\" }}\r\n                onSelectSlot={handleSelect}\r\n                onSelectEvent={handleEventSelect}\r\n                onEventDrop={handleEventDrop}\r\n                onEventResize={handleEventResize}\r\n                resizable\r\n                popup\r\n                messages={messages}\r\n                view={view as any}\r\n                onView={(newView: string) => setView(newView)}\r\n                eventPropGetter={eventStyleGetter}\r\n                step={60}\r\n                timeslots={1}\r\n                defaultView=\"month\"\r\n                min={new Date(0, 0, 0, 8, 0, 0)}\r\n                max={new Date(0, 0, 0, 20, 0, 0)}\r\n                selectable=\"ignoreEvents\"\r\n                longPressThreshold={100}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Dialog open={isEventDialogOpen} onOpenChange={setIsEventDialogOpen}>\r\n          <DialogContent className=\"w-[95vw] max-w-[425px] max-h-[90vh] overflow-y-auto\">\r\n            <DialogHeader>\r\n              <DialogTitle>\r\n                {selectedEvent?.id ? \"Edit Event\" : \"Add New Event\"}\r\n              </DialogTitle>\r\n            </DialogHeader>\r\n            <div className=\"relative\">\r\n              <EventForm\r\n                event={selectedEvent}\r\n                onSave={handleSaveEvent}\r\n                onDelete={handleDeleteEvent}\r\n                onCancel={() => {\r\n                  setIsEventDialogOpen(false);\r\n                  setSelectedEvent(null);\r\n                }}\r\n              />\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface EventFormProps {\r\n  event: Event | null;\r\n  onSave: (eventData: Partial<Event>) => void;\r\n  onDelete: (eventId: string) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nfunction EventForm({ event, onSave, onDelete, onCancel }: EventFormProps) {\r\n  const [formData, setFormData] = useState({\r\n    title: event?.title || \"\",\r\n    description: event?.description || \"\",\r\n    category: event?.category || \"work\",\r\n    start: event?.start || new Date(),\r\n    end: event?.end || new Date(),\r\n    allDay: event?.allDay || false,\r\n  });\r\n\r\n  // Separate date and time state for better UX\r\n  const [startDate, setStartDate] = useState(\r\n    event?.start\r\n      ? format(event.start, \"yyyy-MM-dd\")\r\n      : format(new Date(), \"yyyy-MM-dd\")\r\n  );\r\n  const [startTime, setStartTime] = useState(\r\n    event?.start ? format(event.start, \"HH:mm\") : \"09:00\"\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    event?.end\r\n      ? format(event.end, \"yyyy-MM-dd\")\r\n      : format(new Date(), \"yyyy-MM-dd\")\r\n  );\r\n  const [endTime, setEndTime] = useState(\r\n    event?.end ? format(event.end, \"HH:mm\") : \"10:00\"\r\n  );\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Combine date and time before saving\r\n    const startDateTime = new Date(`${startDate}T${startTime}`);\r\n    const endDateTime = new Date(`${endDate}T${endTime}`);\r\n\r\n    onSave({\r\n      ...formData,\r\n      start: startDateTime,\r\n      end: endDateTime,\r\n    });\r\n  };\r\n\r\n  // Update formData when date/time changes\r\n  const updateFormData = () => {\r\n    const startDateTime = new Date(`${startDate}T${startTime}`);\r\n    const endDateTime = new Date(`${endDate}T${endTime}`);\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      start: startDateTime,\r\n      end: endDateTime,\r\n    }));\r\n  };\r\n\r\n  // Update formData whenever date/time changes\r\n  React.useEffect(() => {\r\n    updateFormData();\r\n  }, [startDate, startTime, endDate, endTime]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"title\" className=\"text-sm sm:text-base\">\r\n          Event Title\r\n        </Label>\r\n        <Input\r\n          id=\"title\"\r\n          value={formData.title}\r\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n          placeholder=\"Enter event title\"\r\n          className=\"text-sm sm:text-base\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"description\" className=\"text-sm sm:text-base\">\r\n          Description\r\n        </Label>\r\n        <Textarea\r\n          id=\"description\"\r\n          value={formData.description}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, description: e.target.value })\r\n          }\r\n          placeholder=\"Enter event description\"\r\n          rows={3}\r\n          className=\"text-sm sm:text-base\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"category\" className=\"text-sm sm:text-base\">\r\n          Category\r\n        </Label>\r\n        <Select\r\n          value={formData.category}\r\n          onValueChange={(value) =>\r\n            setFormData({ ...formData, category: value })\r\n          }\r\n        >\r\n          <SelectTrigger className=\"text-sm sm:text-base\">\r\n            <SelectValue placeholder=\"Select category\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {categories.map((category) => (\r\n              <SelectItem key={category.value} value={category.value}>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div\r\n                    className=\"w-3 h-3 rounded-full\"\r\n                    style={{ backgroundColor: category.color }}\r\n                  />\r\n                  <span className=\"text-sm sm:text-base\">{category.label}</span>\r\n                </div>\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label className=\"text-sm sm:text-base font-medium\">\r\n            Start Date & Time\r\n          </Label>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n            <div className=\"space-y-1\">\r\n              <Label\r\n                htmlFor=\"startDate\"\r\n                className=\"text-xs sm:text-sm text-gray-600\"\r\n              >\r\n                Date\r\n              </Label>\r\n              <Input\r\n                id=\"startDate\"\r\n                type=\"date\"\r\n                value={startDate}\r\n                onChange={(e) => setStartDate(e.target.value)}\r\n                className=\"text-sm sm:text-base\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label\r\n                htmlFor=\"startTime\"\r\n                className=\"text-xs sm:text-sm text-gray-600\"\r\n              >\r\n                Time\r\n              </Label>\r\n              <Input\r\n                id=\"startTime\"\r\n                type=\"time\"\r\n                value={startTime}\r\n                onChange={(e) => setStartTime(e.target.value)}\r\n                className=\"text-sm sm:text-base\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label className=\"text-sm sm:text-base font-medium\">\r\n            End Date & Time\r\n          </Label>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n            <div className=\"space-y-1\">\r\n              <Label\r\n                htmlFor=\"endDate\"\r\n                className=\"text-xs sm:text-sm text-gray-600\"\r\n              >\r\n                Date\r\n              </Label>\r\n              <Input\r\n                id=\"endDate\"\r\n                type=\"date\"\r\n                value={endDate}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n                className=\"text-sm sm:text-base\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n              <Label\r\n                htmlFor=\"endTime\"\r\n                className=\"text-xs sm:text-sm text-gray-600\"\r\n              >\r\n                Time\r\n              </Label>\r\n              <Input\r\n                id=\"endTime\"\r\n                type=\"time\"\r\n                value={endTime}\r\n                onChange={(e) => setEndTime(e.target.value)}\r\n                className=\"text-sm sm:text-base\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center space-x-2\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"allDay\"\r\n          checked={formData.allDay}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, allDay: e.target.checked })\r\n          }\r\n          className=\"w-4 h-4\"\r\n        />\r\n        <Label htmlFor=\"allDay\" className=\"text-sm sm:text-base\">\r\n          All Day Event\r\n        </Label>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col sm:flex-row justify-end gap-2 sm:space-x-2\">\r\n        {event?.id && (\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"destructive\"\r\n            size=\"sm\"\r\n            className=\"text-xs sm:text-sm\"\r\n            onClick={() => onDelete(event.id)}\r\n          >\r\n            <Trash2 className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2\" />\r\n            Delete\r\n          </Button>\r\n        )}\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          className=\"text-xs sm:text-sm\"\r\n          onClick={onCancel}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\" size=\"sm\" className=\"text-xs sm:text-sm\">\r\n          {event?.id ? (\r\n            <>\r\n              <Edit className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2\" />\r\n              Update\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Plus className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2\" />\r\n              Create\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}